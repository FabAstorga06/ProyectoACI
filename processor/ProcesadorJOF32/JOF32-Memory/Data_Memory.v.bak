`timescale 1ns / 1ps

module Data_Memory (
    clk,
    result_alu,
    in_b,
    mem_wr,
    out,
    );

input wire clk;
input wire [31:0] result_alu;
input wire [31:0] in_b;
input wire mem_wr;
output reg [31:0] out;

// Creación del espacio de memoria
reg [7:0] data_mem [2000000]; // 2MB * 8 bits

initial begin
    // Se ingresan los datos del programa aquí
    // $readmemb("instr.txt", instrmem);
end

always @(posedge clk)
begin
    if (mem_wr == 1) // if sw
    begin
        data_mem [result_alu] <= in_b [31:24];
        data_mem [result_alu + 1] <= in_b [23:16];
        data_mem [result_alu + 2] <= in_b [15:8];
        data_mem [result_alu + 3] <= in_b [7:0];
    end
end

always @(negedge clk)
begin
    out [31:24] <= data_mem [result_alu];
    out [23:16] <= data_mem [result_alu + 1];
    out [15:8] <= data_mem [result_alu + 2];
    out [7:0] <= data_mem [result_alu + 3];
end

endmodule
